cards1-cards2==3
which(cards1-cards2==3)
sample(hand,12)
length(which(cards1-cards2>=6 | cards1-cards2<= -6))
help(lm)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
lm(w~x-1)
plot(w~x-1)
fit=lm(w~x-1)
fit
class(fit)
str(fit)
abline(0.2957*x ~ x)
y = 0.2957*x
y
x
plot(y~x)
lm(w~x)
lm(w~x-1)
mean(x)
barplot(w~x)
numberWhite <- rhyper(30,4,5,3)
numberWhite <- as.factor(numberWhite)
plot(numberWhite)
numberWhite
mtcar$gear
mtcars$gear
table(mtcars$gear)
plot(w,x,type = "h")
plot(w~x,type = "h")
x
plot(w~x,type = "h", ylim = c(-2,3))
plot(w~x,type = "h")
w
plot(w~x,type = "h", ylim = c(0,3))
mean(sqrt(w)*x)
cc = sum(w*x^2)
aa = sum(w)
bb = 2*sum(x*w)
(-bb/2+sqrt(bb^2+4*aa*cc))/aa
(-bb/2-sqrt(bb^2+4*aa*cc))/aa
(-bb+sqrt(bb^2+4*aa*cc))/2*aa
(-bb+sqrt(bb^2+4*aa*cc))/(2*aa)
(-bb+sqrt((bb^2)-4*aa*cc))/(2*aa)
bb^2
4*aa*cc
bb = -2*sum(x*w)
cc = sum(w*x^2)
sum(x*w)/sum(w)
c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(c(8.58, 10.46, 9.01, 9.64, 8.86))
var(c(8.58, 10.46, 9.01, 9.64, 8.86))
qqq = (c(8.58, 10.46, 9.01, 9.64, 8.86) -9.31)/0.5642
mean(qqq)
qqq = (c(8.58, 10.46, 9.01, 9.64, 8.86) -mean(c(8.58, 10.46, 9.01, 9.64, 8.86)))/var(c(8.58, 10.46, 9.01, 9.64, 8.86))
mean(qqq)
var(qqq)
qqq = (c(8.58, 10.46, 9.01, 9.64, 8.86) -mean(c(8.58, 10.46, 9.01, 9.64, 8.86)))/sd(c(8.58, 10.46, 9.01, 9.64, 8.86))
var(qqq)
mean(qqq)
qqq
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
2*pt(2.24,21,lower.tail=F)
x
y
qqnorm(y)
qqline(y)
qqnorm(y~x)
qqline(y~x)
plot(y~x)
lm(y~x)
(y-(1.567-1.713*x)~x)
plot(y-(1.567-1.713*x)~x)
abline(h=0)
plot(y-(1.567-1.713*x)~lm(y~x))
fitted = lm(y~x)
plot(y-(1.567-1.713*x)~fitted)
plot(y-(1.567-1.713*x)~(1.567-1.713*x))
fitted = 1.567-1.713*x
res = y-(1.567-1.713*x)
plot(res~fitted)
abline(h=0)
plot(abs(res)~fitted)
final_grade = function() {
c1=20*sum(11.78/12, 11/12, 14/15, 13/14,1, 9/10)/6
c2=15
c3=15*56.5/65
c4=15*24/30
c1+c2+c3+c4
}
final_grade()
56.5*24/30
15*56.5/65
20*sum(11.78/12, 11/12, 14/15, 13/14,1, 9/10)/6
15*24/30
final_grade = function() {
c1=20*sum(11.78/12, 11/12, 14/15, 13/14,1, 9/10)/6
c2=15
c3=15*56.5/65
c4=20*24/30
c1+c2+c3+c4
}
final_grade()
c1=20*sum(11.78/12, 11/12, 14/15, 13/14,1, 9/10)/6
c2=15
c3=15*56.5/65
c4=20*24/30
c1
c2
c3
c4
80-final_grade()
pt(4)
pnorm(4)
pnorm(5)
pnorm(6)
sqrt(.322*(1-.322)*418)
sqrt(.322*(1-.322))
sqrt(.322*(1-.322)*418)/sqrt(418)
418*.322
sqrt((135/418)*(1-(135/418))*418)
sqrt((135/418)*(1-(135/418)))
qnorm(0.975)
qnorm(0.975) * sqrt((135/418)*(1-(135/418)))
qnorm(0.975) * sqrt((135/418)*(1-(135/418))) * c(-1,1)
qnorm(0.975) * sqrt((135/418)*(1-(135/418))) * c(-1,1) + 1
qnorm(0.975) * sqrt((135/418)*(1-(135/418))) * c(-1,1) + 135
sigma = sqrt(135*(1-(135/418)))
sigma
(145-135)/sigma
pnorm(1.045991)
pnorm(0)
pnorm(-10/sigma)
sigma/sqrt(418)
sqrt(0.322*(1-0.322)/418)
sqrt(0.322*(1-0.322)/418)*c(-1,1)*qnorm(0.975)
sqrt(0.322*(1-0.322)/418)*c(-1,1)*qnorm(0.975)+0.322
avg = 185/604
avg
sqrt(avg*(1-avg)/ab)*c(-1,1)*qnorm(0.975)+avg
ab = 604
sqrt(avg*(1-avg)/ab)*c(-1,1)*qnorm(0.975)+avg
sqrt((16/51)*(1-(16/51))/ab)*c(-1,1)*qnorm(0.975)+16/51
sqrt((16/51)*(1-(16/51))/ab)*c(-1,1)*qt(0.975,50)+16/51
sqrt((16/51)*(1-(16/51))/ab)*c(-1,1)*qt(0.975,df = 50)+16/51
sqrt(avg*(1-avg)/ab)*c(-1,1)*qt(0.975,df-603)+avg
sqrt(avg*(1-avg)/ab)*c(-1,1)*qt(0.975,df=603)+avg
sqrt((16/51)*(1-(16/51))/ab)*c(-1,1)*qt(0.975,df = 50)+16/51
16/51
102/604
185/604
sqrt((23/604)*(1-(23/604))/ab)*c(-1,1)*qt(0.975,df=603)+23/604
604*(sqrt((23/604)*(1-(23/604))/ab)*c(-1,1)*qt(0.975,df=603)+23/604)
604*(sqrt((23/604)*(1-(23/604))/ab)*c(-1,1)*qt(0.975,df=603)+23/604)*162/252
ab = 588
avg = 164/ab
sqrt(avg*(1-avg)/ab)*c(-1,1)*qt(0.975,df=ab-1)+avg
avg
ab=588+525
avg = (146+164)/ab
sqrt(avg*(1-avg)/ab)*c(-1,1)*qt(0.975,df=ab-1)+avg
sqrt((53/154)*(1-(53/154))/154)*c(-1,1)*qt(0.975,df = 153)+53/154
53/154
pc
pchi()
pc()
pch()
pchis
pchis()
pchisq(31.68,2,lower.tail=F)
0.915^2
-0.29+20*0.18
-0.29+70*0.18
-0.29+70*0.18-10
-0.29+20*0.18
0.11*.89
0.11*.89/10
0.11*.89/10*qnorm(0.95, lower.tail=F)
qnorm(0.95, lower.tail=F)
qnorm(0.95, lower.tail=F) * c(-1,1)
qnorm(0.95, lower.tail=F) * c(-1,1) + .11
0.11*.89/10*qnorm(0.95, lower.tail=F)*c(1,-1)+.11
sqrt(.11*.89)
sqrt(.11*.89)/10
1.645*sqrt(.11*.89)/10
1.645*sqrt(.11*.89)/10 + .11
c(-1,1)*qt(0.95,df=99, lower.tail = F)*sqrt(.11*.89)/10 + .11
0.88^4
1-0.88^4
qt(1-0.0066, df = 9,lower.tail=F)
pt(.98,df=9, lower.tail=F)
qt(0.98, df = 9)
193901/830
813.5/233.6157
195528-1627
1627/2
(195528-1627)/830
(1627/2)/((195528-1627)/830)
(1627/2)/((195528-1627)/828)
(195528-1627)/828
1627/195528
100*1627/195528
k = function(z) {3.5 - z}
k(243,251)
k(c(243,251))
(243+251)/2
(2.65+6.48)/2
(0.87+6.13)/2
(-2.76+9.76)/2
qt(0.98,9)
80-final_grade()
80-final_grade()-11
c1
c2
c3
c4
c1+c2+c3+c4
c1+c2+c3+c4+11
qt(1-0.0033, 9, lower.tail=F)
qt(0.975, 10000, lower.tail=F)
qt(1-0.0033, 9, lower.tail=F)
(3.5*sqrt(10))/qt(1-0.0033, 9, lower.tail=F)
((3.5*sqrt(10))/qt(1-0.0033, 9, lower.tail=F))^2
sqrt((((3.5*sqrt(10))/qt(1-0.0033, 9, lower.tail=F))^2)/2)
qt(1-0.0033, 9, lower.tail=F)
3.5/qt(1-0.0033, 9, lower.tail=F)
qt(0.99,9,lower.tail=F)*3.5/qt(1-0.0033, 9, lower.tail=F)
qt(0.99,9,lower.tail=F)*3.5/qt(1-0.0033, 9, lower.tail=F)*c(-1,1)
qt(0.99,9,lower.tail=F)*3.5/qt(1-0.0033, 9, lower.tail=F)*c(-1,1)+3.5
qt(0.98,9,lower.tail=F)*3.5/qt(1-0.0033, 9, lower.tail=F)*c(-1,1)+3.5
qt(0.99,9,lower.tail=F)*3.5/qt(1-0.0033, 9, lower.tail=F)*c(-1,1)+3.5
qt(0.99,9,lower.tail=F)*3.5/qt(1-0.0066, 9, lower.tail=F)*c(-1,1)+3.5
qt(0.975, 21,lower.tail=F)
qt(0.99,9,lower.tail=F)*3.5/qt(1-0.0033, 9, lower.tail=F)*c(-1,1)+244.8
qt(0.99,9,lower.tail=F)*3.5/qt(1-0.0033, 9, lower.tail=F)*c(-1,1)
qt(0.99,9,lower.tail=F)*3.5/qt(1-0.0033, 9, lower.tail=F)*c(-1,1)+3.5
251-243
6.48-2.65
6.13-0.87
myf = function(a,b) {(a+b)/2}
myf(243,251)
myf(244.8,248.3)
myf(2.65,648)
myf(2.65,6.48)
myf(0.87,6.13)
myf(-2.76,9.76)
select()
sample(c(rep("r",20),rep("g",80)), replace = T, size = 3226)
which(sample(c(rep("r",20),rep("g",80)), replace = T, size = 3226) == "r")
length(which(sample(c(rep("r",20),rep("g",80)), replace = T, size = 3226) == "r"))
length(which(sample(c(rep("r",20),rep("g",80)), replace = T, size = 3226) == "r"))
length(which(sample(c(rep("r",20),rep("g",80)), replace = T, size = 3226) == "r"))/3226
length(which(sample(c(rep("r",20),rep("g",80)), replace = T, size = 3226) == "r"))/3226
length(which(sample(c(rep("r",20),rep("g",80)), replace = T, size = 3226) == "r"))/3226
length(which(sample(c(rep("r",20),rep("g",80)), replace = T, size = 3226) == "r"))/3226
xxx=NULL
sqrt(3226)
1/sqrt(3226)
1.96/sqrt(3226)
qnorm(0.95,lower.tail=F)/sqrt(3226)
sqrt(0.2*0.8/3226)
sqrt(0.24*0.76/3226)
mynum = function(a) {for (t in 1:10000) a[t] = sample(1:60,5,replace = F)}
a = NULL
mynum(a)
a
a[1]
sample(1:60,5,replace = F)
a[1] = sample(1:60,5,replace = F)
a[1,] = sample(1:60,5,replace = F)
a = matrix()
a[1,] = sample(1:60,5,replace = F)
a[1,] = sample(1:60,5,replace = F)
sample(1:60, size=5, replace = T)
a [1] = sample(1:60, size=5, replace = T)
a [1:5] = sample(1:60, size=5, replace = T)
a
a [1,1:5] = sample(1:60, size=5, replace = T)
a [1][1:5] = sample(1:60, size=5, replace = T)
9965/(9965+285)
(0.05*0.93+0.03*0.95)
(0.93*0.05)*(0.05*0.93+0.03*0.95)
(0.93*0.05)/(0.05*0.93+0.03*0.95)
24/46
24/625
240000/625
240000/112
240000/625
3831/15079
251/(251-16)
1.068*0.254
251/(252-16)
1.0636*0.254
(24/26)*(112/625)
24/112
1120000/625
c1+c2+c3+c4
c1+c2+c3+c4+23
library(shiny)
install.packages("shiny")
library(shiny)
library(validate)
install.packages("validate")
install.packages("setProgress")
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
he('Sidebar text')
),
mainPanel(
he("Main Panel text")
)
))
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h3('Sidebar text')
),
mainPanel(
he("Main Panel text")
)
))
shinyUI(pageWithSidebar(
headerPanel("Data science FTW!"),
sidebarPanel(
h3('Sidebar text')
),
mainPanel(
h3("Main Panel text")
)
))
shinyServer(
function(input, output) {
}
)
runApp()
setdir("Google Drive")
setwd("Google Drive")
setwd("Classes")
setwd("coursera")
setwd("DevDataProducts")
setwd("DevelopDataProducts")
setwd("base shiny")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
diabetesRisk
diabetesRisk()
diabetesRisk()
runApp()
runApp()
runApp()
runApp()
runApp()
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
s
a
myPlot(a)
myPlot(2)
myPlot()
data(mtcars)
myPlot(2)
cars$dist
names(mtcards)
names(mtcars)
library(manipulate)
myPlot <- function(s) {
plot(mtcars$dist - mean(mtcars$dist), mtcars$speed - mean(mtcars$speed))
abline(0, s)
}
myPlot(2)
mtcars$dist
mtcars
names(mtcars)
mtcars$disp
library(manipulate)
myPlot <- function(s) {
plot(mtcars$dist - mean(mtcars$disp), mtcars$speed - mean(mtcars$speed))
abline(0, s)
}
myPlot(2)
mtcars$speed
names(mtcars)
mtcars$vs
mtcars$am
mtcars$drat
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
mtcars$mpg
manipulate(myPlot, s = slider(0, 2, step = 0.1))
cars
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
cars$speed = c(10,20,30,40,50,60,70,80,90,100)
cars = NULL
cars$speed = c(10,20,30,40,50,60,70,80,90,100)
cars$dist = c(11,24,29,41,55,59,65,82,90,97)
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
dTable(airquality, sPaginationType = "full_numbers")
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
library(rCharts)
install.packages('rCharts')
require(devtools)
install_github('rCharts', 'ramnathv')
dTable(airquality, sPaginationType = "full_numbers")
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
airquality
head(airquality)
d <- data.frame(airquality, stringsAsFactors = FALSE); print(d)
library(rCharts)
dTable(airquality, sPaginationType = "full_numbers")
c1
c2
c3
c4
c5
c5=23
sum(c1,c2,c3,c4,c5)
suppressPackageStartupMessages(library(googleVis))
install.packages("googleVis")
suppressPackageStartupMessages(library(googleVis))
gvisMotionChart(Fruits, "Fruits", "Year", opinion = list(width=600, height= 400))
gvisMotionChart(Fruits, "Fruits", "Year", options = list(width=600, height= 400))
gvisMotionChart(Fruits, "Fruit", "Year", options = list(width=600, height= 400))
M=gvisMotionChart(Fruits, "Fruit", "Year", options = list(width=600, height= 400))
print(M, "chart")
runApp()
print(M, "chart")
demo(googleVis)
plot(M, "chart")
plot(M)
print(M, "chart")
M=gvisMotionChart(Fruits, "Fruit", "Year", options = list(width=600, height= 400))
print(M, "chart")
library('googleVis')
library(googleVis)
df <- data.frame(country=c("US", "GB", "BR"), val1=c(10,13,14), val2=c(23,12,32))
Line <-  gvisLineChart(df, xvar="country", yvar=c("val1","val2"),
options=list(
title="Hello World",
titleTextStyle="{color:'red',
fontName:'Courier',
fontSize:16}",
backgroundColor="#D3D3D3",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'Country', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'orange',targetAxisIndex:1}]",
vAxes="[{title:'val1'}, {title:'val2'}]",
legend="bottom",
curveType="function",
width=500,
height=300
))
plot(Line)
plot(M)
library(googleVis)
df <- data.frame(country=c("US", "GB", "BR"), val1=c(10,13,14), val2=c(23,12,32))
Line <-  gvisLineChart(df, xvar="country", yvar=c("val1","val2"),
options=list(
gvis.editor="Editor",
title="Hello World",
titleTextStyle="{color:'red',
fontName:'Courier',
fontSize:16}",
backgroundColor="#D3D3D3",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'Country', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'orange',targetAxisIndex:1}]",
vAxes="[{title:'val1'}, {title:'val2'}]",
legend="bottom",
curveType="function",
width=500,
height=300
))
plot(Line)
plot(M)
plot(line)
plot(Line)
